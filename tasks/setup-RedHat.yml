---
- name: Ensure dependencies are installed.
  become: true
  package:
    name:
      - curl
      - initscripts
      - "{{ 'libselinux-python' if ansible_python['version']['major'] < 3 else 'python3-libselinux' }}"
      - epel-release
      - java-11-openjdk-devel
      - ca-certificates
    state: present
  when: "group_names | join('') == 'master'"

- name: Ensure Jenkins repo is installed.
  become: true
  get_url:
    url: "{{ jenkinsRepoUrl }}"
    dest: /etc/yum.repos.d/jenkins.repo
  when: 
    - group_names | join('') == 'master'
    - jenkinsVer is not defined

- name: Add Jenkins repo GPG key.
  become: true
  rpm_key:
    state: present
    key: "{{ jenkinsRepoKeyUrl }}"
  when: 
    - group_names | join('') == 'master'
    - jenkinsVer is not defined

- name: Download specific Jenkins version.
  get_url:
    url: "{{ jenkinsPkgUrl }}/jenkins-{{ jenkinsVer }}-1.1.noarch.rpm"
    dest: "/tmp/jenkins-{{ jenkinsVer }}-1.1.noarch.rpm"
  when: 
    - jenkinsVer is defined
    - group_names | join('') == 'master'

- name: Check if we downloaded a specific version of Jenkins.
  stat:
    path: "/tmp/jenkins-{{ jenkinsVer }}-1.1.noarch.rpm"
  register: specific_version
  when: 
    - jenkinsVer is defined
    - group_names | join('') == 'master'

- name: Install our specific version of Jenkins.
  become: true
  package:
    name: "/tmp/jenkins-{{ jenkinsVer }}-1.1.noarch.rpm"
    state: present
  when: 
    - jenkinsVer is defined and specific_version.stat.exists
    - group_names | join('') == 'master'

- name: Ensure Jenkins is installed.
  become: true
  package:
    name: jenkins
    state: present

- name: "Create Jenkins Master Directory For Scripting"
  become: true
  file:
    path: "{{ jenkinsDir }}/init.groovy.d"
    state: "directory"
  when: "group_names | join('') == 'master'"

- name: Ensure dependencies are installed.
  become: true
  package:
    name:
      - java-1.8.0-openjdk
      - "{{ 'libselinux-python' if ansible_python['version']['major'] < 3 else 'python3-libselinux' }}"
      - git
    state: present
  when: "group_names | join('') == 'agent'"