---
- name: Get crumbIssuer
  run_once: true
  uri:
    url: "http://{{jenkinsIPAddress}}:{{httpPort}}/crumbIssuer/api/json"
    method: GET
    user: "{{jenkinAdmin}}"
    password: "{{ jenkinAdminPwd }}"
    force_basic_auth: true
    return_content: true
  register: crumbIssuer
  delegate_to: localhost

- name: Get content from private key
  shell: "cat {{hostvars[inventory_hostname].ansible_ssh_private_key_file}}"
  register: agentPrivateKey
  delegate_to: "localhost"
  when:
      - hostvars[inventory_hostname].ansible_connection | string == 'ssh'
      - "group_names | join('') == 'agent'"    

- name: "Add Credentials SSH Private Key"
  uri:
    url: "http://{{jenkinsIPAddress}}:{{httpPort}}/scriptText"
    method: POST
    body_format: form-urlencoded
    headers:
      Cookie: "{{ crumbIssuer.set_cookie | default('') }}"
      Jenkins-Crumb: "{{crumbIssuer.json.crumb}}"
    body: 
      script: "import jenkins.model.Jenkins\nimport com.cloudbees.plugins.credentials.domains.Domain\nimport com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey\nimport com.cloudbees.plugins.credentials.CredentialsScope\ninstance = Jenkins.instance\ndomain = Domain.global()\nstore = instance.getExtensionList(\"com.cloudbees.plugins.credentials.SystemCredentialsProvider\")[0].getStore()\nprivateKey = new BasicSSHUserPrivateKey.DirectEntryPrivateKeySource(\n'''\n{{agentPrivateKey.stdout}}\n '''\n)\nsshKey = new BasicSSHUserPrivateKey(CredentialsScope.GLOBAL,\"{{inventory_hostname | default('')}}\",\"{{hostvars[inventory_hostname].ansible_ssh_user}}\",privateKey,\"{{hostvars[inventory_hostname].credentialsKeyPWD | default('') }}\",\"{{hostvars[inventory_hostname].credentialsDescription | string}}\")\nstore.addCredentials(domain, sshKey)"
    user: "{{jenkinAdmin}}"
    password: "{{ jenkinAdminPwd }}"
    force_basic_auth: true
    return_content: true
  delegate_to: localhost
  when:
    - group_names | join('') == 'agent'
    - hostvars[inventory_hostname].ansible_connection | string == 'ssh'
    - hostvars[inventory_hostname].ansible_ssh_pass is not defined
    - hostvars[inventory_hostname].jenkinsForcedConnectionJar is not defined

# - name: Add Credentials Secret text
#   uri:
#     url: ""http://{{jenkinsIPAddress}}:{{httpPort}}/scriptText""
#     method: POST
#     body_format: form-urlencoded
#     headers:
#       Cookie: "{{ crumbIssuer.set_cookie | default('') }}"
#       Jenkins-Crumb: "{{crumbIssuer.json.crumb}}"
#     body: 
#       script: "import jenkins.model.Jenkins\nimport com.cloudbees.plugins.credentials.domains.Domain\nimport org.jenkinsci.plugins.plaincredentials.impl.StringCredentialsImpl\nimport com.cloudbees.plugins.credentials.CredentialsScope\nimport hudson.util.Secret\ninstance = Jenkins.instance\ndomain = Domain.global()\nstore = instance.getExtensionList(\"com.cloudbees.plugins.credentials.SystemCredentialsProvider\")[0].getStore()\nsecretText = new StringCredentialsImpl(CredentialsScope.GLOBAL,\"\",\"SECRET_DESCRIPTION\",Secret.fromString(\"SECRET_TEXT\"))\nstore.addCredentials(domain, secretText)"
#     user: "admin"
#     password: "cf701585bd3a477b8ad9551bf121e38a"
#     force_basic_auth: true
#     return_content: true
#   register: jenkins_slave_win_agent_secret
#   delegate_to: localhost
#   when:
#     - group_names | join('') == 'agent'
#     - hostvars[inventory_hostname].ansible_connection | string == 'ssh'

- name: Add Credentials Username & Password
  uri:
    url: "http://{{jenkinsIPAddress}}:{{httpPort}}/scriptText"
    method: POST
    body_format: form-urlencoded
    headers:
      Cookie: "{{ crumbIssuer.set_cookie | default('') }}"
      Jenkins-Crumb: "{{crumbIssuer.json.crumb}}"
    body: 
      script: "import jenkins.model.Jenkins\nimport com.cloudbees.plugins.credentials.domains.Domain\nimport com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl\nimport com.cloudbees.plugins.credentials.CredentialsScope\ninstance = Jenkins.instance\ndomain = Domain.global()\nstore = instance.getExtensionList(\"com.cloudbees.plugins.credentials.SystemCredentialsProvider\")[0].getStore()\nusernameAndPassword = new UsernamePasswordCredentialsImpl(CredentialsScope.GLOBAL,\"{{inventory_hostname | default('')}}\",\"{{hostvars[inventory_hostname].credentialsDescription | string}}\",\"{{hostvars[inventory_hostname].ansible_ssh_user}}\",\"{{hostvars[inventory_hostname].ansible_ssh_pass}}\")\nstore.addCredentials(domain, usernameAndPassword)"
    user: "{{jenkinAdmin}}"
    password: "{{ jenkinAdminPwd }}"
    force_basic_auth: true
    return_content: true
  delegate_to: localhost
  when:
    - group_names | join('') == 'agent'
    - hostvars[inventory_hostname].ansible_connection | string == 'ssh'
    - hostvars[inventory_hostname].ansible_ssh_pass is defined
    - hostvars[inventory_hostname].jenkinsForcedConnectionJar is not defined

